# feat(): Description
#[type]([optional scope]): [description]

#[optional body]

# Footers
# BREAKING CHANGE:
#[optional footer(s)]

# feat: MUST be used when a commit adds a new feature to your application or library
# fix: MUST be used when a commit represents a bug fix for your application
# docs: Documentation
# style: Changes to whitespace, formatting, etc. which does not affect the meaning of the code
# refactor: neither fixes a bug nor adds a feature
# perf: Improves performance
# test: Adds or fixes tests to the code
# build: Changes that affect the build system or external dependences
# ci: Changes to the continuous integration
# chore: Other changes that don't modify src or test files
# revert: reverts to a previous commit


# `!:` Indicates a BREAKING CHANGE. The comment description shall describe the breaking change and the footer may include "BREAKING CHANGE: " as well
